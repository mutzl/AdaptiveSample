// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using MyUniversalWindows10App.Models;
using Newtonsoft.Json.Linq;

namespace MyUniversalWindows10App.Models
{
    public partial class SpeakerInfo
    {
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private IList<Speaker> _speakers;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Speaker> Speakers
        {
            get { return this._speakers; }
            set { this._speakers = value; }
        }
        
        private string _timestamp;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Timestamp
        {
            get { return this._timestamp; }
            set { this._timestamp = value; }
        }
        
        private string _url;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Url
        {
            get { return this._url; }
            set { this._url = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the SpeakerInfo class.
        /// </summary>
        public SpeakerInfo()
        {
            this.Speakers = new LazyList<Speaker>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken speakersSequence = ((JToken)inputObject["Speakers"]);
                if (speakersSequence != null && speakersSequence.Type != JTokenType.Null)
                {
                    foreach (JToken speakersValue in ((JArray)speakersSequence))
                    {
                        Speaker speaker = new Speaker();
                        speaker.DeserializeJson(speakersValue);
                        this.Speakers.Add(speaker);
                    }
                }
                JToken timestampValue = inputObject["Timestamp"];
                if (timestampValue != null && timestampValue.Type != JTokenType.Null)
                {
                    this.Timestamp = ((string)timestampValue);
                }
                JToken urlValue = inputObject["Url"];
                if (urlValue != null && urlValue.Type != JTokenType.Null)
                {
                    this.Url = ((string)urlValue);
                }
            }
        }
    }
}
